//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.1

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "resouce_resouce_type")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub resource_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub resource_type_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::resource::Entity",
        from = "Column::ResourceId",
        to = "super::resource::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Resource,
    #[sea_orm(
        belongs_to = "super::resource_type::Entity",
        from = "Column::ResourceTypeId",
        to = "super::resource_type::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    ResourceType,
}

impl Related<super::resource::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Resource.def()
    }
}

impl Related<super::resource_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ResourceType.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
